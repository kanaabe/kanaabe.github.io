<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Code Snacks]]></title>
  <link href="http://blog.kanaabe.com/atom.xml" rel="self"/>
  <link href="http://blog.kanaabe.com/"/>
  <updated>2015-01-02T15:58:35-05:00</updated>
  <id>http://blog.kanaabe.com/</id>
  <author>
    <name><![CDATA[Kana Abe]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Getting Started With SVG]]></title>
    <link href="http://blog.kanaabe.com/blog/2014/11/13/getting-started-with-svg/"/>
    <updated>2014-11-13T14:57:01-05:00</updated>
    <id>http://blog.kanaabe.com/blog/2014/11/13/getting-started-with-svg</id>
    <content type="html"><![CDATA[<p>Getting Started With SVG</p>

<p>Everyone seems to have at least some interest in data visualization lately. It’s pretty, it’s informative, and it makes us feel like we’re learning something without reading long lines of text. One of the most popular Javascript libraries for creating data visualizations are with D3.js.</p>

<p>D3 is built on top of these common standards:</p>

<ol>
<li>HTML</li>
<li>CSS</li>
<li>The DOM</li>
<li>SVG</li>
</ol>


<p>Before starting D3, we should be somewhat familiar with the concepts above. I’m pretty familiar with 1-3, so today I’m writing about.. SVG</p>

<!--more-->


<h2>What is SVG?</h2>

<p>SVG stands for ‘Scalable Vector Graphics’
A type of graphic component for the web
SVG is vector-based. (This means images SCALE nicely)
SVG is written in XML format
SVG can be directly embedded in HTML
CSS can apply to SVG elements!</p>

<p><svg width="120" height="120">
  <circle cx="60" cy="60" r="50" stroke="blue" stroke-width="2" fill="yellow" />
</svg></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;svg</span> <span class="na">width=</span><span class="s">&quot;120&quot;</span> <span class="na">height=</span><span class="s">&quot;120&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;circle</span> <span class="na">cx=</span><span class="s">&quot;60&quot;</span> <span class="na">cy=</span><span class="s">&quot;60&quot;</span> <span class="na">r=</span><span class="s">&quot;50&quot;</span> <span class="na">stroke=</span><span class="s">&quot;blue&quot;</span> <span class="na">stroke-width=</span><span class="s">&quot;2&quot;</span> <span class="na">fill=</span><span class="s">&quot;yellow&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/svg&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Breaking down the syntax:</h2>

<ul>
<li>Enclosed in an <code>&lt;svg&gt;&lt;/svg&gt;</code> tag</li>
<li>The width and height correspond to the image size</li>
<li>Create the circle with the <code>&lt;circle&gt;</code> tag</li>
<li>cx and cy refer to the ‘center x’ and ‘center y’ which places the circle’s middle relative to the image size. If you want the circle in the middle, cx and cy default to (0,0)</li>
<li>r refers to the circle’s radius</li>
<li>stroke,stroke-width,and fill are all visual properties to change the stroke and color</li>
</ul>


<h2>With CSS</h2>

<p><svg width="400" height="200">
  <rect width="400" height="200" style="fill:blue;stroke:pink;stroke-width:10;fill-opacity:0.1;stroke-opacity:0.9" />
</svg></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;svg</span> <span class="na">width=</span><span class="s">&quot;400&quot;</span> <span class="na">height=</span><span class="s">&quot;200&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;rect</span> <span class="na">width=</span><span class="s">&quot;400&quot;</span> <span class="na">height=</span><span class="s">&quot;200&quot;</span> <span class="na">style=</span><span class="s">&quot;fill:blue;stroke:pink;stroke-width:10;fill-opacity:0.1;stroke-opacity:0.9&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/svg&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Here, we’re using the rectangle tag. I used in-line CSS to demonstrate how we can pass in regular CSS definitions to set the element’s properties.</p>

<h2>Other elements:</h2>

<ul>
<li>Ellipse</li>
<li>Line</li>
<li>Polyline</li>
<li>Polygon</li>
<li>Path</li>
</ul>


<h2><code>&lt;g&gt;</code> tag</h2>

<p>One very important tag used a LOT in D3 is the <g> tag. This tag simply groups elements together. This is especially important in making transformations for D3.</p>

<p><svg>
    <g>
      <rect x="10" y="20" height="50" width="75"
          style="stroke: black; fill: yellow"/>
      <text x="10" y="90" style="stroke: black;">
        Following the shape..</text>
    </g>
</svg></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;svg&gt;</span>
</span><span class='line'>    <span class="nt">&lt;g&gt;</span>
</span><span class='line'>      <span class="nt">&lt;rect</span> <span class="na">x=</span><span class="s">&quot;10&quot;</span> <span class="na">y=</span><span class="s">&quot;20&quot;</span> <span class="na">height=</span><span class="s">&quot;50&quot;</span> <span class="na">width=</span><span class="s">&quot;75&quot;</span>
</span><span class='line'>          <span class="na">style=</span><span class="s">&quot;stroke: black; fill: yellow&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;text</span> <span class="na">x=</span><span class="s">&quot;10&quot;</span> <span class="na">y=</span><span class="s">&quot;90&quot;</span> <span class="na">style=</span><span class="s">&quot;stroke: black;&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        Following the shape..<span class="nt">&lt;/text&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/g&gt;</span>
</span><span class='line'><span class="nt">&lt;/svg&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p><svg height="200">
    <g transform="rotate(45 50 50) translate(20 0)">
      <rect x="10" y="20" height="50" width="75"
          style="stroke: black; fill: yellow"/>
      <text x="10" y="90" style="stroke: black;">
        Following the shape..</text>
    </g>
</svg></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;svg</span> <span class="na">height=</span><span class="s">&quot;200&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;g</span> <span class="na">transform=</span><span class="s">&quot;rotate(45 50 50) translate(20 0)&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;rect</span> <span class="na">x=</span><span class="s">&quot;10&quot;</span> <span class="na">y=</span><span class="s">&quot;20&quot;</span> <span class="na">height=</span><span class="s">&quot;50&quot;</span> <span class="na">width=</span><span class="s">&quot;75&quot;</span>
</span><span class='line'>          <span class="na">style=</span><span class="s">&quot;stroke: black; fill: yellow&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;text</span> <span class="na">x=</span><span class="s">&quot;10&quot;</span> <span class="na">y=</span><span class="s">&quot;90&quot;</span> <span class="na">style=</span><span class="s">&quot;stroke: black;&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        Following the shape..<span class="nt">&lt;/text&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/g&gt;</span>
</span><span class='line'><span class="nt">&lt;/svg&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Notice, the only change we made here is that I transformed the entire group. The important line here is <g transform="rotate(45 50 50) translate(20 0)"> in the opening g tag. It adds the rotation and translation to our SVG image.</p>

<p>YAY IT’S LINEAR ALGEBRA ALL OVER AGAIN!</p>

<p><svg height="400">
    <g transform="rotate(45 50 50) translate(50 0) scale(1.5)">
      <rect x="10" y="20" height="50" width="75"
          style="stroke: black; fill: yellow"/>
      <text x="10" y="90" style="stroke: black;">
        Following the shape..</text>
    </g>
</svg></p>

<p>Scale is a another transformation that might come in handy to you.</p>

<p>Let’s see what you can make!</p>

<p>third example courtesy of: <a href="http://tutorials.jenkov.com/svg/g-element.html">http://tutorials.jenkov.com/svg/g-element.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Nokogiri Saw]]></title>
    <link href="http://blog.kanaabe.com/blog/2014/10/16/the-nokogiri-saw/"/>
    <updated>2014-10-16T15:57:26-04:00</updated>
    <id>http://blog.kanaabe.com/blog/2014/10/16/the-nokogiri-saw</id>
    <content type="html"><![CDATA[<p>In Japanese, the term “nokogiri” refers to this:</p>

<p><img src="http://hsto.org/storage/habraeffect/11/8d/118d003d546a1fa1e240e1cc4dfb4a61.jpg" alt="Nokogiri Saw" /></p>

<p>It’s a saw used for cutting wood, but instead of making the cut on the “push” like a traditional European saw, the Nokogiri saw cuts on the “pull”.
Coming from a small <a href="sites.google.com/site/digihumanlab/research">background</a> in Data Science, my brain lit up as soon as I was introduced to this magical gem.</p>

<h2>Define the Problem</h2>

<p>After explaining to my boyfriend the concept of ‘scraping’, I asked him, “What do you want me to scrape for you?”
“I want to know how to title my Reddit posts so it catches the most attention.”
Great, problem defined.</p>

<!--more-->


<h2>Spec It Out</h2>

<p>Immediately I understand that solving this problem will take lots and lots of data and time. Therefore, the goal of this blog post is to lay out the foundation of a project that I can build on.</p>

<h2>Here It What I Know:</h2>

<ul>
<li>I want to scrape Reddit using Nokogiri</li>
<li>I want to retrieve the titles of each post</li>
<li>I want to use these titles and add them to some data structure I can iterate on</li>
<li>I want to find the most frequently used words</li>
<li>The Reddit RSS would be cool to use but I want to practice scraping.</li>
</ul>


<h2>Discover Issues</h2>

<p>One issue I encountered when trying to iterate through multiple pages is that the URL structure made no sense to me.</p>

<p>Page 1 - <a href="http://www.reddit.com/">http://www.reddit.com/</a></p>

<p>Page 2 - <a href="http://www.reddit.com/?count=25&amp;after=t3_2jg309">http://www.reddit.com/?count=25&amp;after=t3_2jg309</a></p>

<p>Page 3 - <a href="http://www.reddit.com/?count=50&amp;after=t3_2jg30w">http://www.reddit.com/?count=50&amp;after=t3_2jg30w</a></p>

<p>Page 4 - <a href="http://www.reddit.com/?count=75&amp;after=t3_2jgfto">http://www.reddit.com/?count=75&amp;after=t3_2jgfto</a></p>

<p>At first I figured that iterating through increments of 25 in the count parameter of the URL would work since each page contains 25 items.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">count</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>  <span class="n">str</span> <span class="o">=</span> <span class="s2">&quot;http://www.reddit.com/?count=&quot;</span>
</span><span class='line'>  <span class="mi">10</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">reddit</span> <span class="o">&lt;&lt;</span> <span class="n">scrape_titles</span><span class="p">(</span><span class="n">str</span><span class="o">+</span><span class="p">(</span><span class="n">count</span><span class="o">+</span><span class="mi">24</span><span class="p">)</span><span class="o">.</span><span class="n">to_s</span><span class="p">)</span>
</span><span class='line'>    <span class="n">count</span> <span class="o">=</span> <span class="n">count</span> <span class="o">+</span> <span class="mi">25</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>This did not work. What ended up happening was that duplicate titles appeared in my array. In fact, no matter what value I inserted for count, it showed me the same page. It was clear that getting a static URL for “Page 2 of Reddit’s Front Page” was not available. Based on the URL and HTML, the ‘after’ parameter was checking the ID of the post and creating content based on that. The ‘count’ param was irrelavent.</p>

<h2>Continue Anyway..</h2>

<p>Instead of iterating through the front page titles, I decided to find the titles on the each of the Reddit subheading pages will do.</p>

<p><img src="http://content.screencast.com/users/kabesailthru/folders/Jing/media/80a85640-8525-490e-ac5e-66b869adda92/00000166.png" alt="Reddit" /></p>

<p>(Note: I excluded gilded, wiki, and promoted)
Below is the code I have for my scraper class.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">RedditScraper</span>
</span><span class='line'>  <span class="vc">@@reddit</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'>  <span class="no">PAGES</span> <span class="o">=</span> <span class="o">[</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="s2">&quot;/new/&quot;</span><span class="p">,</span><span class="s2">&quot;/rising/&quot;</span><span class="p">,</span><span class="s2">&quot;/controversial/&quot;</span><span class="p">,</span><span class="s2">&quot;/top/&quot;</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize_all_titles</span>
</span><span class='line'>    <span class="n">str</span> <span class="o">=</span> <span class="s2">&quot;http://www.reddit.com&quot;</span>
</span><span class='line'>    <span class="no">PAGES</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">page</span><span class="o">|</span>
</span><span class='line'>      <span class="vc">@@reddit</span> <span class="o">&lt;&lt;</span> <span class="n">scrape_titles</span><span class="p">(</span><span class="n">str</span><span class="o">+</span><span class="n">page</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="vc">@@reddit</span><span class="o">.</span><span class="n">uniq</span><span class="o">.</span><span class="n">flatten</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">scrape_titles</span><span class="p">(</span><span class="n">str</span><span class="p">)</span>
</span><span class='line'>    <span class="n">doc</span> <span class="o">=</span> <span class="no">Nokogiri</span><span class="o">::</span><span class="no">HTML</span><span class="p">(</span><span class="nb">open</span><span class="p">(</span><span class="n">str</span><span class="p">))</span>
</span><span class='line'>    <span class="n">arr</span><span class="o">=[]</span>
</span><span class='line'>    <span class="n">doc</span><span class="o">.</span><span class="n">css</span><span class="p">(</span><span class="s1">&#39;a.title&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">title</span><span class="o">|</span>
</span><span class='line'>      <span class="n">arr</span> <span class="o">&lt;&lt;</span> <span class="n">title</span><span class="o">.</span><span class="n">text</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="n">arr</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Running RedditScraper.new.initialize_all_titles returns an Array with all my title names. Awesome!
Here is a sample of my output so far</p>

<p><img src="http://content.screencast.com/users/kabesailthru/folders/Jing/media/4ce3c544-0f71-4bec-b463-7e0a19b0f55c/00000168.png" alt="Results" /></p>

<p>Next I need to analyze this data. What I really want to do is to find the frequency of each of the words to see “what’s trending” right now. I created a class called RedditAnalyzer which allows me to do this.
Lets iterate through our titles array, graciously given to us by RedditScraper, find individual words, and keep a frequency count each time I come across this word.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">RedditAnalyzer</span>
</span><span class='line'>  <span class="vc">@@frequency</span> <span class="o">=</span> <span class="p">{}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">call</span>
</span><span class='line'>    <span class="n">scraper</span> <span class="o">=</span> <span class="no">RedditScraper</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">initialize_all_titles</span>
</span><span class='line'>    <span class="n">add</span><span class="p">(</span><span class="n">scraper</span><span class="p">)</span>
</span><span class='line'>    <span class="c1">#binding.pry</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">add</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>
</span><span class='line'>    <span class="n">arr</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">title</span><span class="o">|</span>
</span><span class='line'>      <span class="n">title</span><span class="o">.</span><span class="n">downcase</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">word</span><span class="o">|</span>
</span><span class='line'>        <span class="n">word</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/[,.\[\]&#39;?!-\&quot;]/</span><span class="p">,</span> <span class="s2">&quot;&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="k">if</span> <span class="vc">@@frequency</span><span class="o">[</span><span class="n">word</span><span class="o">]</span>
</span><span class='line'>          <span class="vc">@@frequency</span><span class="o">[</span><span class="n">word</span><span class="o">]</span> <span class="o">=</span> <span class="vc">@@frequency</span><span class="o">[</span><span class="n">word</span><span class="o">]</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'>        <span class="k">else</span>
</span><span class='line'>          <span class="vc">@@frequency</span><span class="o">[</span><span class="n">word</span><span class="o">]</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Two more functions I decided to add are below. delete_common is called from top_20 and removes the 100 most common words in the English language. The top_20 function prints out the top 20 most frequently used words.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">top_20</span>
</span><span class='line'>    <span class="n">delete_common</span>
</span><span class='line'>    <span class="n">sorted</span> <span class="o">=</span> <span class="vc">@@frequency</span><span class="o">.</span><span class="n">sort_by</span> <span class="p">{</span><span class="o">|</span><span class="n">k</span><span class="p">,</span><span class="n">v</span><span class="o">|</span> <span class="o">-</span><span class="n">v</span><span class="p">}</span>
</span><span class='line'>    <span class="n">sorted</span><span class="o">.</span><span class="n">each_with_index</span> <span class="k">do</span> <span class="o">|</span><span class="n">word</span><span class="p">,</span><span class="n">ind</span><span class="o">|</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">word</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span><span class="si">}</span><span class="s2"> with frequency </span><span class="si">#{</span><span class="n">word</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span><span class="si">}</span><span class="s2">&quot;</span> <span class="k">if</span> <span class="n">ind</span> <span class="o">&lt;=</span><span class="mi">19</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">delete_common</span>
</span><span class='line'>    <span class="n">text</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'>    <span class="no">File</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="s2">&quot;resources/common_words.txt&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">each_line</span> <span class="k">do</span> <span class="o">|</span><span class="n">line</span><span class="o">|</span>
</span><span class='line'>      <span class="n">text</span> <span class="o">&lt;&lt;</span> <span class="n">line</span><span class="o">.</span><span class="n">chop</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="vc">@@frequency</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">word</span><span class="p">,</span><span class="n">v</span><span class="o">|</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">text</span><span class="o">.</span><span class="n">include?</span><span class="p">(</span><span class="n">word</span><span class="p">)</span>
</span><span class='line'>        <span class="vc">@@frequency</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="n">word</span><span class="p">)</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>AND FINALLY..THE TOP 20 MOST FREQUENT WORDS USED IN A TITLE ON REDDIT AT 3:41AM ON 10/17:</h2>

<p>i with frequency 18</p>

<p>not with frequency 10</p>

<p>til with frequency 6</p>

<p>‘-’ with frequency 5</p>

<p>why with frequency 5</p>

<p>using with frequency 5</p>

<p>just with frequency 4</p>

<p>man with frequency 4</p>

<p>ebola with frequency 4</p>

<p>good with frequency 4</p>

<p>best with frequency 4</p>

<p>only with frequency 4</p>

<p>18 with frequency 3</p>

<p>while with frequency 3</p>

<p>million with frequency 3</p>

<p>travel with frequency 3</p>

<p>guy with frequency 3</p>

<p>sick with frequency 3</p>

<p>don’t with frequency 3</p>

<p>eli5: with frequency 3</p>

<h2>“TIL: WHY 18 MILLION DON’T TRAVEL WHILE MAN IS SICK WITH EBOLA”</h2>

<p>Maybe I should create some bots next…</p>

<p>Full repo: <a href="https://github.com/kanaabe/scraping_reddit">https://github.com/kanaabe/scraping_reddit</a></p>

<h2>TODO LIST</h2>

<ul>
<li>get rid of that ‘-’ word</li>
<li>add visualization using another Ruby gem</li>
<li>possibly add more ‘common words’</li>
<li>refactor some methods from above, I was being hasty.</li>
</ul>

]]></content>
  </entry>
  
</feed>
