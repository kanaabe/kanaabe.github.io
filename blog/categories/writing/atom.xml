<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Writing | Code Snacks]]></title>
  <link href="http://blog.kanaabe.com/blog/categories/writing/atom.xml" rel="self"/>
  <link href="http://blog.kanaabe.com/"/>
  <updated>2017-05-16T12:20:21+02:00</updated>
  <id>http://blog.kanaabe.com/</id>
  <author>
    <name><![CDATA[Kana Abe]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[My Path to Becoming an Engineer]]></title>
    <link href="http://blog.kanaabe.com/blog/2016/08/11/my-path-to-becoming-an-engineer/"/>
    <updated>2016-08-11T00:48:00+02:00</updated>
    <id>http://blog.kanaabe.com/blog/2016/08/11/my-path-to-becoming-an-engineer</id>
    <content type="html"><![CDATA[<p>In 2009, when I was a 19 year old freshman, I saw Ed Catmull speak at UC Santa Cruz. Afterwards, I waited in line to talk to Ed and told him I wanted to do R&amp;D at Pixar. I asked him what I should major in. He said Art and Computer Science, so I did exactly that.</p>

<!-- more -->


<h3>College</h3>

<p>I spent a year at UC Santa Cruz and took a variety of classes like Linguistics and The History of Disney. It was the first time I was truly by myself, without my twin sister there by me. I lost a lot of focus then &ndash; I became depressed and paranoid by the end of the year and did too many drugs. I loved the people and the campus but it wasn&rsquo;t worth paying $26K a year.</p>

<p>My sophomore year I transferred to Rutgers University in New Jersey, my homestate. That sophomore year was also hard. It was the lowest point of my life so far for the depression for many reasons. I was trying to hold onto a long-term relationship from Santa Cruz that tore me apart. I brought with me a Santa Cruz mindset that didn&rsquo;t fit into the frat-heavy Rutgers. My close friend Goh had committed suicide that year. We were both new to Rutgers (himself a freshman) and we often used to talk about jazz, relationships, and life.</p>

<p>One enjoyable part of that year was being in Computer Science and Visual Art classes. The context switching was entertaining and it was fun being around both art and science nerds. Unfortunately I didn&rsquo;t find much overlap.</p>

<p>As a junior, I took Intro to Computer Graphics and I didn&rsquo;t love it, which was a let down considering I wanted to be in Computer Animation. However, I also took Imaging and Multimedia and that, I loved. I remember my fascination at how simple it was to apply a filter to an image based on image kernels. Since I was interested in R&amp;D, I asked that professor if I could work on any research in the Computer Vision department. I told him I would get back to him with an idea for a paper. One day a pattern emerged in my art history classes: all the courses were all structured linearlly. Monet&rsquo;s Impressionist style influenced Van Gogh and Post-Impressionism, which catapulted Cubism, Expressionism, and Dadaism, which projected Dali and Surrealism, etc etc. I propsed to Professor Elgammal the idea that maybe computers could do all this work and discover even more.</p>

<p>My senior year, I started working a lot on this research topic, and started to break down what elements of an artwork art historians might look at to determine where the influences might be hiding. It turns out that categorization of artwork is pretty important. To be able to determine what influences a painting, we should be able to categorize it first. Since art history is written by humans and is subjective anyway, I didn&rsquo;t see why computers couldn&rsquo;t try it.</p>

<p>The paper turned out to be pretty popular and people around the Internet wrote about it including the Sunday edition of The Washington Post. You can read more about it <a href="https://sites.google.com/site/digihumanlab/research/artistic-influence">here</a></p>

<p>In my art classes, I did a few Arduino projects and started a magazine called Trim with a friend. It was the complete opposite of the stuff I was doing in the CBIM labs. We were organizing photo shoots, contacting models, and trying to get people to everything for free. It was hard and there were a lot of late nights.</p>

<p>Overall my senior year was the most stressed I had ever been. I had to plan out every minute of my life including when I would have time to grab a bite, and if I should bring a toothbrush in case I pull an all-nighter in the library. I had a part-time job, the research project, TRIM magazine, social life, and I was trying to complete an intensive double major in three years. All my guidance counselors said I couldn&rsquo;t do it but I fucking did it.</p>

<h3>Sailthru</h3>

<p>After I graduated I took a month-long backpacking trip to Thailand and Cambodia with some friends. What a time that was! The friends I was travelling with all went to business school and had jobs lined up except for me. I ended up accepting a job at Sailthru while in Thailand, for better or for worse, as a Support Engineer in their Client Services team.</p>

<p>This job was nothing like I had expected. Everyday my job was the same. Pick up new tickets, email people back about their technical issues, and man the phone. About once a week I would be on call, which meant that I would have to answer client calls at 6AM if someone felt so inclined to set up a data feed as the sun rose. Corporate life there was fine &ndash; there were a fair amount of alcoholics and basic ladies but everyone was more or less friendly. I did get to do some technical things like set up complex templating conditionals and help people understand the API and data feeds. Whatever, it was a good introduction to the tech industry.</p>

<p>I got pretty tired of this job quickly, but I managed to stay a whole year. In the last months before I left were some dark times at Sailthru. Shit was just breaking everywhere &ndash; it was the curse of Robin Williams. After his death all our machines broke and the number of tickets spiked exponentially. We were struggling so hard and I remember feeling like there would be no end. At this point I felt like I paid my debt. I felt like I deserved more. So I left a month later.</p>

<p>The most applicable thing I learned was to treat your co-workers like you do your clients. I also confirmed that I wanted to be an engineer more than anything.</p>

<h3>The Flatiron School</h3>

<p>The path I desperately wanted to take was that of a software engineer at a company that involved art and that I cared for and believed in. It led me to The Flatiron School. What a wonderful place that was, and a great reset to my life. Fresh sneakers, new people, the lowest block on Broadway, and a topic that I enjoy. I echo these <a href="https://www.quora.com/What-is-your-review-of-Flatiron-School">thoughts</a> about FIS and I&rsquo;ll always be proud to say where I came from. Funny enough, all those Discrete Math and Linear Algebra classes in college really didn&rsquo;t do shit for me. Sure I was invested at the time, but I didn&rsquo;t come out of there feeling prepped for a software engineering job like I did out of FIS.</p>

<h3>Artsy</h3>

<p>My first choice company to work for was Artsy, since college. I asked Professor Elgammal if there are companies out there that do Art and Science. He said yes, look at Artsy! I was in love. Thanks to the conneX at FIS, I got to interview at Artsy. I remember going up to the 25th floor for the first time and thinking, &ldquo;This feels like heaven&rdquo;. No joke, I was so enamored. The next thing I knew I was deploying to production.</p>

<p>It&rsquo;s been a long journey since, and 1.5 years have passed since I started. In the beginnings I was a contributor to artsy.net and m.artsy.net, picked up issues, and deployed containable features. Craig then introduced me to Writer, a backend CMS for publishing articles all strapped with it&rsquo;s own API, database, and shiny React front-end. Eventually I took over it. Over the course of a year, Editorial grew tremendously in popularity, so a product team called Publishing was created.</p>

<p>We&rsquo;ve done a lot of cool features since, like this <a href="https://www.artsy.net/article/artsy-editorial-2015-the-year-in-art">Year in Art</a> package, this <a href="https://www.artsy.net/article/artsy-editorial-how-art-fairs-expanded-the-contemporary-art-market">UBS Series</a> about the art market, and <a href="https://github.com/artsy/positron/pull/772">my biggest PR yet</a> to name a few.</p>

<p>I&rsquo;m the solo engineer on this team, soon to be joined by an intern. I&rsquo;m currently trying to prepare for the new challenges of managing someone, while seeking new things to learn, like VR.</p>

<p>That&rsquo;s it for now!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Code Every Day]]></title>
    <link href="http://blog.kanaabe.com/blog/2015/01/15/code-every-day/"/>
    <updated>2015-01-15T23:41:37+01:00</updated>
    <id>http://blog.kanaabe.com/blog/2015/01/15/code-every-day</id>
    <content type="html"><![CDATA[<p>Starting 2015, I wanted to write code every day. This meant making at least one meaningful open-source commit each day. It was inspired by John Resig in <a href="http://ejohn.org/blog/write-code-every-day/">this post</a>. All was going well, I felt confident, and submitted good code.</p>

<p>And then I broke it on January 3.</p>

<!-- more -->


<p>Just 6 days in (I started December 28) and I couldn&rsquo;t keep up with my grand plan. Needless to say I was embarrassed and thought this would be impossible. Well, it is. I mean it&rsquo;s <em>possible</em> to write code every day for the rest of your life but in a realistic life-setting, mistakes happen, life happens. <strong>You can&rsquo;t expect to form a concrete habit in one shot</strong>.</p>

<p>Just keep swimming. All I can ask of myself is that the next time I break the streak, it better be longer than 6 days and it <em>better</em> be for a good reason. My current streak is 12 days and I&rsquo;m feeling pretty happy. In fact, I&rsquo;m really proud of all the work that&rsquo;s been done in just 12 days.</p>

<p>I finished a game, I updated the look and feel of this blog, fixed a bunch of bugs that bothered me, started re-designing my boyfriend&rsquo;s portfolio site, and today I dug up my legacy portfolio site and started cleaning. <em>Oh, cleaning.</em> What a wonderful feeling to see terribly designed code and start cleaning.</p>

<p>One fear that&rsquo;s been coming up a lot is: what&rsquo;s going to happen when I start a new job? Ideally I&rsquo;ll be writing code every day at my job, but what about the weekends? Will I be too tired? What if my job doesn&rsquo;t have open-sourced projects? Look, I didn&rsquo;t sign a contract to do this - I&rsquo;m doing this to be a better coder. Right now, this is the best way I can think of to do that. <strong>It doesn&rsquo;t have to be forever, but it should be consistent for as long as it matters</strong>.</p>

<p>I&rsquo;ve been trying at this habit for about a month now and it&rsquo;s been a very therapeutic experience. I get excited to open up my computer and pick up where I left things, still fresh. I don&rsquo;t plan on stopping when I start a new job because I&rsquo;m feeling a lot of the positive side-effects that John Resig talks about in his post. I can&rsquo;t wait to hit that 1 year streak. It will happen, and it will happen naturally!</p>
]]></content>
  </entry>
  
</feed>
